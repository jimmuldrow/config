
Example cql:

-----------------------------------------------------------------

describe keyspaces;

-----------------------------------------------------------------

create keyspace hr with replication={'class':'SimpleStrategy', 'replication_factor':1};

use hr;

create table emp
          (empid int primary key,
          emp_first varchar,
          emp_last varchar,
          emp_dept varchar);

insert into emp (empid, emp_first, emp_last, emp_dept)
          values (1, 'Fred', 'Smith', 'HR');
insert into emp (empid, emp_first, emp_last, emp_dept)
          values (2, 'Mary', 'Taylor', 'HR');
insert into emp (empid, emp_first, emp_last, emp_dept)
          values (3, 'Bob', 'Jackson', 'Eng');

select * from emp;

-----------------------------------------------------------------

use hr;

create table Person
          (id int primary key,
          name varchar,
          age int);

insert into Person (id, name, age)
          values (1, 'Fred Smith', 43);
insert into Person (id, name, age)
          values (2, 'Mary Taylor', 32);
insert into Person (id, name, age)
          values (3, 'Bob Jackson', 51);

select * from Person;

-----------------------------------------------------------------

select broadcast_address from system.local;
select rpc_address from system.peers where peer = '(result of previous)';

Cassandra binds to the rpc address

-----------------------------------------------------------------

Nodes are in a Data Center.
Data Centers are in a Cluster.
Clusters are in a Key Space.
Write operations go from a commit log to a mem-table to an SStable.
Writes are replicated throughout the cluster.
Reads get data from the mem-table / Bloom filter / SStable.

Keyspace is the outermost container for data in Cassandra. The basic attributes of a 
Keyspace in Cassandra are -

Replication factor - It is the number of machines in the cluster that will receive copies of the same data.

Replica placement strategy - It is nothing but the strategy to place replicas in the ring. We have strategies such as simple strategy (rack-aware strategy), old network topology strategy (rack-aware strategy), and network topology strategy (datacenter-shared strategy).

Column families - Keyspace is a container for a list of one or more column families. A column family, in turn, is a container of a collection of rows. Each row contains ordered columns. Column families represent the structure of your data. Each keyspace has at least one and often many column families.

The syntax of creating a Keyspace is as follows -

CREATE KEYSPACE Keyspace name
WITH replication = {'class': 'SimpleStrategy', 'replication_factor' : 3};


A Cassandra column family has the following attributes -

keys_cached - It represents the number of locations to keep cached per SSTable.

rows_cached - It represents the number of rows whose entire contents will be cached in memory.

preload_row_cache - It specifies whether you want to pre-populate the row cache.

Note - Unlike relational tables where a column family’s schema is not fixed, Cassandra does not force individual rows to have all the columns.